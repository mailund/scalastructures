[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 10 products, 5 sources, 1 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/list/SimpleList.scala, ${BASE}/src/main/scala/list/LazyList.scala, ${BASE}/src/main/scala/queue/TwoListsQueue.scala, ${BASE}/src/main/scala/queue/Queue.scala, ${BASE}/src/main/scala/queue/SimpleQueue.scala, ${BASE}/src/main/scala/list/List.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/main/scala/list/LazyList.scala), removed = Set(), changed = Set(${BASE}/src/main/scala/list/List.scala, ${BASE}/src/main/scala/list/SimpleList.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/src/main/scala/list/LazyList.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/list/List.scala, ${BASE}/src/main/scala/list/SimpleList.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(list.ListCompanion, list.List, list.SimpleList)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(list.ListCompanion, list.List, list.SimpleList)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/list/LazyList.scala, ${BASE}/src/main/scala/list/List.scala, ${BASE}/src/main/scala/list/SimpleList.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: list.ListCompanion, list.List, list.SimpleList[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding list.SimpleList by list.ListCompanion[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 3 Scala sources to /Users/mailund/Code/scalastructures/scala-structures/target/scala-3.6.3/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: /Users/mailund/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-sbt-bridge/3.6.3/scala3-sbt-bridge-3.6.3.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 60cfc6b9 for Scala Compiler version 3.6.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/mailund/Code/scalastructures/scala-structures/target/scala-3.6.3/classes:/Users/mailund/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.6.3/scala3-library_3-3.6.3.jar:/Users/mailund/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.15/scala-library-2.13.15.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.511831958 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from list.LazyList...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: list.LazyList[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding list.LazyList$.Cons by list.LazyList[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(list.LazyList, list.LazyList$.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(list.LazyList,ModifiedNames(changes = UsedName(tail,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(##,[Default]), UsedName(head,[Default]), UsedName(prepend,[Default]), UsedName(Cons,[Default]), UsedName(list;LazyList$;init;,[Default]), UsedName(Empty,[Default]), UsedName(append,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(LazyList,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(list;ListCompanion;init;,[Default]), UsedName(list;LazyList;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(fromOrdinal,[Default]), UsedName(isEmpty,[Default]), UsedName(MirroredLabel,[Default]), UsedName(list;List;init;,[Default]), UsedName(ne,[Default]), UsedName(scala;reflect;Enum;init;,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(empty,[Default]), UsedName(finalize,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(scala;deriving;Mirror$;Sum;init;,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(getClass,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredElemLabels,[Default]))) invalidates 2 classes due to The list.LazyList has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tail,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(##,[Default]), UsedName(head,[Default]), UsedName(prepend,[Default]), UsedName(Cons,[Default]), UsedName(list;LazyList$;init;,[Default]), UsedName(Empty,[Default]), UsedName(append,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(LazyList,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(list;ListCompanion;init;,[Default]), UsedName(list;LazyList;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(fromOrdinal,[Default]), UsedName(isEmpty,[Default]), UsedName(MirroredLabel,[Default]), UsedName(list;List;init;,[Default]), UsedName(ne,[Default]), UsedName(scala;reflect;Enum;init;,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(empty,[Default]), UsedName(finalize,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(scala;deriving;Mirror$;Sum;init;,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(getClass,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredElemLabels,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(list.LazyList, list.LazyList$.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from list.List...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: list.List[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding list.LazyList by list.List[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding list.LazyList$.Cons by list.LazyList[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding list.SimpleList by list.List[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(list.LazyList, list.SimpleList, list.List, list.LazyList$.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of list.LazyList: [UsedName(List,[Default]), UsedName(append,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of list.SimpleList: [UsedName(List,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(list.List,ModifiedNames(changes = UsedName(append,[Default]), UsedName(prepend,[Default]), UsedName(List,[Default]))) invalidates 4 classes due to The list.List has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(append,[Default]), UsedName(prepend,[Default]), UsedName(List,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(list.LazyList, list.SimpleList, list.List, list.LazyList$.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(list.LazyList, list.SimpleList)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from list.SimpleList...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: list.SimpleList[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(list.SimpleList)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(list.SimpleList,ModifiedNames(changes = UsedName(prepend,[Default]), UsedName(append,[Default]), UsedName(SimpleList,[Default]))) invalidates 1 classes due to The list.SimpleList has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(prepend,[Default]), UsedName(append,[Default]), UsedName(SimpleList,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(list.SimpleList)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from list.LazyList$.Cons...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: list.LazyList$.Cons[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(list.LazyList$.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(list.LazyList$.Cons,ModifiedNames(changes = UsedName(tail,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(apply,[Default]), UsedName(##,[Default]), UsedName(head,[Default]), UsedName(t,[Default]), UsedName(h,[Default]), UsedName(prepend,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(Cons,[Default]), UsedName(append,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(productElement,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(list;LazyList$;Cons$;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(list;LazyList;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(fromProduct,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(isEmpty,[Default]), UsedName(MirroredLabel,[Default]), UsedName(list;List;init;,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(copy,[Default]), UsedName(scala;reflect;Enum;init;,[Default]), UsedName(_2,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(_1,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(finalize,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(getClass,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(list;LazyList$;Cons;init;,[Default]), UsedName(MirroredElemLabels,[Default]))) invalidates 1 classes due to The list.LazyList$.Cons has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tail,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(apply,[Default]), UsedName(##,[Default]), UsedName(head,[Default]), UsedName(t,[Default]), UsedName(h,[Default]), UsedName(prepend,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(Cons,[Default]), UsedName(append,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(productElement,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(list;LazyList$;Cons$;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(list;LazyList;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(fromProduct,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(isEmpty,[Default]), UsedName(MirroredLabel,[Default]), UsedName(list;List;init;,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(copy,[Default]), UsedName(scala;reflect;Enum;init;,[Default]), UsedName(_2,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(_1,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(finalize,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(getClass,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(list;LazyList$;Cons;init;,[Default]), UsedName(MirroredElemLabels,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(list.LazyList$.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: list.ListCompanion, list.List, list.LazyList$.Cons, list.SimpleList, list.LazyList[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding list.LazyList by list.ListCompanion[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding list.SimpleList by list.ListCompanion[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated macros due to upstream dependencies change: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
